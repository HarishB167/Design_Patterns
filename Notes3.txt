Creational Patterns

--------------------------------------
Section 1 - Prototype Pattern

- Create new object by copying existing objects.
Copy shapes in ppt.

- Structure
* Component (Interface) (Prototype)
render()
clone()
* Circle (ConcretePrototype)
render()
clone()
* ContextMenu (Client)
duplicate() : component.clone()

- Relationship
* Inheritance(Circle, Component)
* Depend(ContextMenu, Component)

- Using
menu = ContextMenu()
menu.duplicate(circle)
doc.add(newCircle)

--------------------------------------
Section 2 - Singleton Pattern

- Ensure single instance of a class. 
E.g. - storing config at one place

- Structure
* ConfigManager (Singleton)
private constructor ConfigManager()
static members: 
private instance = new ConfigManager(), 
getInstance() : returns instance
Instance methods : get(), set()

- Using
logger1 = Logger.get_instance("file1")


--------------------------------------
Status - Section 2 completed
